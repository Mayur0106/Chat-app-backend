/**
 * @file 正则校验规则配置集合
 *
 * @author  Liandong Liu (liu@liandong.org)
 */

var regs = exports.regs = {
    english: /^[a-zA-Z0-9_\-]+$/,
    chinese: /^[\u0391-\uFFE5]+$/,
    number: /^[-\+]?\d+(\.\d+)?$/,
    integer: /^[-\+]?\d+$/,
    floatNum: /^[-\+]?\d+(\.\d+)?$/,
    date: /^(\d{4})(-|\/)(\d{1,2})\2(\d{1,2})$/,
    email: /^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/,
    url: /^(((ht|f)tp(s?))\:\/\/)[a-zA-Z0-9\-\_]+\.[a-zA-Z0-9]+[\/=\?%\-&_~`@[\]\':+!]*([^<>\"\"])*$/,
    phone: /^1\d{10}$|^(0\d{2,3}-?|\(0\d{2,3}\))?[1-9]\d{4,9}(-\d{1,8})?$|^[48]00-([0-9]){1}([0-9-]{6})([0-9]){1}$/,
    mobile: /^1\d{10}$/,
    ip: /^(0|[1-9]\d?|[0-1]\d{2}|2[0-4]\d|25[0-5]).(0|[1-9]\d?|[0-1]\d{2}|2[0-4]\d|25[0-5]).(0|[1-9]\d?|[0-1]\d{2}|2[0-4]\d|25[0-5]).(0|[1-9]\d?|[0-1]\d{2}|2[0-4]\d|25[0-5])$/,
    ipwithStar: /^(\d|[1-9]\d|[0-1]\d{2}|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|[0-1]\d{2}|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|[0-1]\d{2}|2[0-4]\d|25[0-5]|\*)\.(\d|[1-9]\d|[0-1]\d{2}|2[0-4]\d|25[0-5]|\*)$/,
    zipcode: /^[0-9]\d{5}$/,
    qq: /^[1-9]\d{4,10}$/,
    msn: /^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/,
    idcard: /(^\d{15}$)|(^\d{17}[0-9Xx]$)/,
    cnNameText: /^[\u0020-\u007F\u2000-\u206F\u3000-\u303F\u4E00-\u9FBF\uFF00-\uFFEF]*$/,
    exCnNameText: /[!\$'\*,:;<=>\?@\\`\^\|]/,
    winfoExclude: /[\[\]\{\}\(\)\"\"]/
};

/**
 * 测试是否合法的url
 *
 * @param  {string}  value 输入值
 * @return {boolean} 测试结果
 */
exports.isUrl = function (value) {
    return regs.url.test(value);
};

/**
 * 测试是否合法的电话格式
 *
 * @param  {string}  value 输入值
 * @return {boolean} 测试结果
 */
exports.isPhone = function (value) {
    return regs.phone.test(value);
};

/**
 * 测试是否合法的数值格式（允许浮点数）
 *
 * @param  {string}  value 输入值
 * @return {boolean} 测试结果
 */
exports.isNumber = function (value) {
    return regs.number.test(value);
};

/**
 * 测试是否合法的文本内容
 *
 * @param  {string}  value 输入值
 * @return {boolean} 测试结果
 */
exports.isNormalText = function (value) {
    // 暂时需要接收特殊英文字符
    // && !regs.exCnNameText.test(value)
    return regs.cnNameText.test(value);
};


