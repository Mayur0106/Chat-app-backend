/**
 * @file 物料校验规则
 *
 * @author  Liandong Liu (liu@liandong.org)
 */

var conf = require('./ruleConf');
var Rule = require('./Rule');
var url = require('./url');
var pattern = require('./pattern');

/**
 * 检查字段`key`是否合法
 *
 * @param  {string} key 字段名称
 * @param  {*} value 校验取值
 * @param {string|null} name 字段名称
 * @return {Object|boolean} 如果校验通过返回`true`值，否则返回一个Object
 *
 * @example
 * validator.check('winfo', '[my best friend]')
 * > {patterns: '关键词名称包含非法字符'}
 */
exports.check = function (key, value, name) {
    if (conf.rules.hasOwnProperty(key)) {
        var rule = new Rule(conf.rules[key]);
        return rule.check(value, name);
    }
    return true;
};


/**
 * 扩展校验规则
 *
 * @param  {Object} rules 待扩展的规则
 */
exports.extendRules = function (rules) {
    for (var key in rules) {
        if (rules.hasOwnProperty(key)) {
            conf.rules[key] = rules[key];
        }
    }
};

/**
 * 检查对象数据`data`的各个字段是否合法
 * - 只检查有注册校验规则的字段
 *
 * @param  {Object} data 校验取值
 * @return {Object|boolean} 如果校验通过返回`true`值，否则返回一个Object
 *
 * @example
 * validator.checkItem({bid: -1, winfo: '{helloword}'})
 * > {winfo: {patterns: '关键词名称包含非法字符'}, bid: {min: '关键词出价小于0.3元'}, length: 2}
 */
exports.checkItem = function (data) {
    var result = {};
    var flag = 0;
    for (var key in data) {
        if (data.hasOwnProperty(key)) {
            var info = exports.check(key, data[key]);
            if (info !== true) {
                result[key] = info;
                flag++;
            }
        }
    }
    result.length = flag;
    return flag ? result : true;
};

/**
 * 弹窗提示
 *
 * - 从错误信息中选择第一条信息，弹窗提示
 *
 * @param  {Object} info 错误校验信息
 * @return {boolean}
 */
exports.alert = function (info) {
    if (typeof info == 'object') {
        var firstKey = Object.keys(info)[0];
        alert(info[firstKey]);
        return false;
    }
    return true;
};

exports.setSiteUrls = function (urls) {
    url.siteUrls = urls.split(/;|,/g);
};

exports.setMinPrice = function (minPrice) {
    Rule.prototype._minPrice = minPrice;
};

/**
 * 检查字段`key`是否合法，如果有错误信息，直接弹窗提示
 * - todo (liandong) 所有的错误弹窗改为dialog组件
 *
 * @param  {string} key 字段名称
 * @param  {*} value 校验取值
 * @return {boolean} 如果校验通过返回`true`值，否则`false`
 *
 * @example
 * validator.check('winfo', '[my best friend]')
 * > alert('关键词名称包含非法字符')
 */
exports.checkAndAlert = function (key, value) {
    if (value === null) {
        value = '';
    }
    var info = exports.check(key, value);
    return info === true ? true : exports.alert(info);
};

// extend validator with pattern
(function () {
    for (var key in pattern) {
        if (pattern.hasOwnProperty(key)) {
            exports[key] = pattern[key];
        }
    }
})();
